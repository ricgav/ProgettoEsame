version: "3"
services:
  service-registry:
    build: service-registry
    image: service-registry:latest
    platform: linux/amd64
    container_name: service-registry
    ports:
      - "8761:8761"
    networks:
      - project-network
  api-gateway:
    build: api-gateway
    image: api-gateway:latest
    platform: linux/amd64
    container_name: api-gateway
    environment:
      - eureka.client.serviceUrl.defaultZone=http://service-registry:8761/eureka/
    ports:
      - "9191:9191"
    depends_on:
      - service-registry
    networks:
      - project-network
  dbpostgresqlorder:
    container_name: dbpostgresqlorder
    image: "postgres"
    expose:
      - "5433"
    ports:
      - "5433:5432"
    volumes:
      - db-data:/var/lib/dbpostgresqlorder/data
    networks:
      - project-network
    environment:
      POSTGRES_DB: testdb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      restart: unless-stopped
  order-service:
    build: order-service
    image: order_service
    container_name: order-service
    platform: linux/amd64
    ports:
      - "8081:8080"
    depends_on:
      - dbpostgresqlorder
    networks:
      - project-network
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://dbpostgresqlorder:5432/testdb #da lasciare 5432 o da cambiare nel config del db
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - eureka.client.serviceUrl.defaultZone=http://service-registry:8761/eureka/
      - SPRING_PROFILES_ACTIVE=docker
  dbpostgresqluser:
    container_name: dbpostgresqluser
    image: "postgres"
    expose:
      - "5434"
    ports:
      - "5434:5432"
    volumes:
      - db-data:/var/lib/dbpostgresqlorder/data
    networks:
      - project-network
    environment:
      POSTGRES_DB: testdb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      restart: unless-stopped
  user-service:
    build: user-service
    image: user_service
    container_name: user-service
    platform: linux/amd64
    ports:
      - "8083:8080"
    depends_on:
      - dbpostgresqluser
    networks:
      - project-network
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://dbpostgresqluser:5432/testdb #da lasciare 5432 o da cambiare nel config del db
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - eureka.client.serviceUrl.defaultZone=http://service-registry:8761/eureka/
      - SPRING_PROFILES_ACTIVE=docker
  dbpostgresqlproduct:
    container_name: dbpostgresqlproduct
    image: "postgres"
    expose:
      - "5435"
    ports:
      - "5435:5432"
    volumes:
      - db-data:/var/lib/dbpostgresqlproduct/data
    networks:
      - project-network
    environment:
      POSTGRES_DB: testdb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      restart: unless-stopped
  product-service:
    build: product-service
    image: product_service
    container_name: product-service
    platform: linux/amd64
    ports:
      - "8082:8080"
    depends_on:
      - dbpostgresqlproduct
    networks:
      - project-network
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://dbpostgresqlproduct:5432/testdb #da lasciare 5432 o da cambiare nel config del db
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - eureka.client.serviceUrl.defaultZone=http://service-registry:8761/eureka/
      - SPRING_PROFILES_ACTIVE=docker

volumes:
  db-data:
networks:
  project-network:
    driver: bridge
